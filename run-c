#!/usr/bin/env bash

# Fail on error
set -e

# Get this file's directory
FILE_DIRECTORY="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Library directory
LIB_DIRECTORY="$FILE_DIRECTORY/src/util/c/"

# Load the usage string
. $FILE_DIRECTORY/run --source-only

checkUsage $1 $2 $3 $4

# assume inputs are sane
YEAR=$1
DAY=$2
PART=$3
TEST_FILE=$4

# Working directory
WORK_DIRECTORY="$FILE_DIRECTORY/dist/c/$YEAR/$PART"

SOLUTION_PATH="$FILE_DIRECTORY/src/$YEAR/$DAY"
SOLUTION="$SOLUTION_PATH/$PART/c/solution.c"

# Clean
rm -rf $WORK_DIRECTORY
mkdir -p $WORK_DIRECTORY

# List libs
LIB_DIRECTORY_NAME=`echo $LIB_DIRECTORY | sed s/.$//g`
LIBS=`find $LIB_DIRECTORY_NAME -iname *.c`
LIBS=`echo "$LIBS" |tr '\n' ' '`

# Make
gcc -Wall $LIBS $SOLUTION -o $WORK_DIRECTORY/solution


if [ -z "$4" ]
  then
    cat $SOLUTION_PATH/input | $WORK_DIRECTORY/solution
  else
    cat $SOLUTION_PATH/$PART/$TEST_FILE | $WORK_DIRECTORY/solution
fi
